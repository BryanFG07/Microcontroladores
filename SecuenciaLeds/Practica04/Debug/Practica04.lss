
Practica04.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000438  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003e4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000438  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000468  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000004a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000767  00000000  00000000  000004d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006db  00000000  00000000  00000c3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005ba  00000000  00000000  0000131a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  000018d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d9  00000000  00000000  00001918  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001b7  00000000  00000000  00001cf1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001ea8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 44 00 	jmp	0x88	; 0x88 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  14:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  28:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  2c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  58:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  5c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  60:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  64:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  68:	73 00       	.word	0x0073	; ????
  6a:	89 00       	.word	0x0089	; ????
  6c:	9f 00       	.word	0x009f	; ????
  6e:	b5 00       	.word	0x00b5	; ????
  70:	cb 00       	.word	0x00cb	; ????
  72:	e1 00       	.word	0x00e1	; ????
  74:	f7 00       	.word	0x00f7	; ????
  76:	0d 01       	movw	r0, r26
  78:	23 01       	movw	r4, r6
  7a:	39 01       	movw	r6, r18
  7c:	4f 01       	movw	r8, r30
  7e:	65 01       	movw	r12, r10
  80:	7b 01       	movw	r14, r22
  82:	91 01       	movw	r18, r2
  84:	a7 01       	movw	r20, r14
  86:	bd 01       	movw	r22, r26

00000088 <__ctors_end>:
  88:	11 24       	eor	r1, r1
  8a:	1f be       	out	0x3f, r1	; 63
  8c:	cf ef       	ldi	r28, 0xFF	; 255
  8e:	d8 e0       	ldi	r29, 0x08	; 8
  90:	de bf       	out	0x3e, r29	; 62
  92:	cd bf       	out	0x3d, r28	; 61
  94:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <main>
  98:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <init_ports>:
		}
    }
}
void init_ports(void){
	//outputs
	DISPLAY_DDRX_SEG_AD |= (1 << DISPLAY_SEG_A);
  a0:	8a b1       	in	r24, 0x0a	; 10
  a2:	80 61       	ori	r24, 0x10	; 16
  a4:	8a b9       	out	0x0a, r24	; 10
	DISPLAY_DDRX_SEG_AD |= (1 << DISPLAY_SEG_B);
  a6:	8a b1       	in	r24, 0x0a	; 10
  a8:	80 62       	ori	r24, 0x20	; 32
  aa:	8a b9       	out	0x0a, r24	; 10
	DISPLAY_DDRX_SEG_AD |= (1 << DISPLAY_SEG_C);
  ac:	8a b1       	in	r24, 0x0a	; 10
  ae:	80 64       	ori	r24, 0x40	; 64
  b0:	8a b9       	out	0x0a, r24	; 10
	DISPLAY_DDRX_SEG_AD |= (1 << DISPLAY_SEG_D);
  b2:	8a b1       	in	r24, 0x0a	; 10
  b4:	80 68       	ori	r24, 0x80	; 128
  b6:	8a b9       	out	0x0a, r24	; 10
	DISPLAY_DDRX_SEG_EG |= (1 << DISPLAY_SEG_E);
  b8:	84 b1       	in	r24, 0x04	; 4
  ba:	81 60       	ori	r24, 0x01	; 1
  bc:	84 b9       	out	0x04, r24	; 4
	DISPLAY_DDRX_SEG_EG |= (1 << DISPLAY_SEG_F);
  be:	84 b1       	in	r24, 0x04	; 4
  c0:	82 60       	ori	r24, 0x02	; 2
  c2:	84 b9       	out	0x04, r24	; 4
	DISPLAY_DDRX_SEG_EG |= (1 << DISPLAY_SEG_G);
  c4:	84 b1       	in	r24, 0x04	; 4
  c6:	84 60       	ori	r24, 0x04	; 4
  c8:	84 b9       	out	0x04, r24	; 4
	
	//inputs
	BTN_DDRX &= ~(1 << BTN0);	
  ca:	84 b1       	in	r24, 0x04	; 4
  cc:	8f 7e       	andi	r24, 0xEF	; 239
  ce:	84 b9       	out	0x04, r24	; 4
  d0:	08 95       	ret

000000d2 <display_show>:
}
void display_show(uint8_t i){
	switch (i){
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	80 31       	cpi	r24, 0x10	; 16
  d6:	91 05       	cpc	r25, r1
  d8:	08 f0       	brcs	.+2      	; 0xdc <display_show+0xa>
  da:	64 c1       	rjmp	.+712    	; 0x3a4 <display_show+0x2d2>
  dc:	fc 01       	movw	r30, r24
  de:	ec 5c       	subi	r30, 0xCC	; 204
  e0:	ff 4f       	sbci	r31, 0xFF	; 255
  e2:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <__tablejump2__>
		case 0:
			DISPLAY_SEG_A_ON;
  e6:	8b b1       	in	r24, 0x0b	; 11
  e8:	80 61       	ori	r24, 0x10	; 16
  ea:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_ON;
  ec:	8b b1       	in	r24, 0x0b	; 11
  ee:	80 62       	ori	r24, 0x20	; 32
  f0:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
  f2:	8b b1       	in	r24, 0x0b	; 11
  f4:	80 64       	ori	r24, 0x40	; 64
  f6:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_ON;
  f8:	8b b1       	in	r24, 0x0b	; 11
  fa:	80 68       	ori	r24, 0x80	; 128
  fc:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_ON;
  fe:	85 b1       	in	r24, 0x05	; 5
 100:	81 60       	ori	r24, 0x01	; 1
 102:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 104:	85 b1       	in	r24, 0x05	; 5
 106:	82 60       	ori	r24, 0x02	; 2
 108:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_OFF;
 10a:	85 b1       	in	r24, 0x05	; 5
 10c:	8b 7f       	andi	r24, 0xFB	; 251
 10e:	85 b9       	out	0x05, r24	; 5
		break;
 110:	08 95       	ret
		case 1:
			DISPLAY_SEG_A_OFF;
 112:	8b b1       	in	r24, 0x0b	; 11
 114:	8f 7e       	andi	r24, 0xEF	; 239
 116:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_ON;
 118:	8b b1       	in	r24, 0x0b	; 11
 11a:	80 62       	ori	r24, 0x20	; 32
 11c:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 11e:	8b b1       	in	r24, 0x0b	; 11
 120:	80 64       	ori	r24, 0x40	; 64
 122:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_OFF;
 124:	8b b1       	in	r24, 0x0b	; 11
 126:	8f 77       	andi	r24, 0x7F	; 127
 128:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_OFF;
 12a:	85 b1       	in	r24, 0x05	; 5
 12c:	8e 7f       	andi	r24, 0xFE	; 254
 12e:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_OFF;
 130:	85 b1       	in	r24, 0x05	; 5
 132:	8d 7f       	andi	r24, 0xFD	; 253
 134:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_OFF;
 136:	85 b1       	in	r24, 0x05	; 5
 138:	8b 7f       	andi	r24, 0xFB	; 251
 13a:	85 b9       	out	0x05, r24	; 5
		break;
 13c:	08 95       	ret
		case 2:
			DISPLAY_SEG_A_ON;
 13e:	8b b1       	in	r24, 0x0b	; 11
 140:	80 61       	ori	r24, 0x10	; 16
 142:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_ON;
 144:	8b b1       	in	r24, 0x0b	; 11
 146:	80 62       	ori	r24, 0x20	; 32
 148:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_OFF;
 14a:	8b b1       	in	r24, 0x0b	; 11
 14c:	8f 7b       	andi	r24, 0xBF	; 191
 14e:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_F_OFF;
 150:	85 b1       	in	r24, 0x05	; 5
 152:	8d 7f       	andi	r24, 0xFD	; 253
 154:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 156:	85 b1       	in	r24, 0x05	; 5
 158:	84 60       	ori	r24, 0x04	; 4
 15a:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_E_ON;
 15c:	85 b1       	in	r24, 0x05	; 5
 15e:	81 60       	ori	r24, 0x01	; 1
 160:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_D_ON;
 162:	8b b1       	in	r24, 0x0b	; 11
 164:	80 68       	ori	r24, 0x80	; 128
 166:	8b b9       	out	0x0b, r24	; 11
		break;
 168:	08 95       	ret
		case 3:
			DISPLAY_SEG_A_ON;
 16a:	8b b1       	in	r24, 0x0b	; 11
 16c:	80 61       	ori	r24, 0x10	; 16
 16e:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_ON;
 170:	8b b1       	in	r24, 0x0b	; 11
 172:	80 62       	ori	r24, 0x20	; 32
 174:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 176:	8b b1       	in	r24, 0x0b	; 11
 178:	80 64       	ori	r24, 0x40	; 64
 17a:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_ON;
 17c:	8b b1       	in	r24, 0x0b	; 11
 17e:	80 68       	ori	r24, 0x80	; 128
 180:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_OFF;
 182:	85 b1       	in	r24, 0x05	; 5
 184:	8e 7f       	andi	r24, 0xFE	; 254
 186:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_OFF;
 188:	85 b1       	in	r24, 0x05	; 5
 18a:	8d 7f       	andi	r24, 0xFD	; 253
 18c:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 18e:	85 b1       	in	r24, 0x05	; 5
 190:	84 60       	ori	r24, 0x04	; 4
 192:	85 b9       	out	0x05, r24	; 5
		break;
 194:	08 95       	ret
		case 4:
			DISPLAY_SEG_A_OFF;
 196:	8b b1       	in	r24, 0x0b	; 11
 198:	8f 7e       	andi	r24, 0xEF	; 239
 19a:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_ON;
 19c:	8b b1       	in	r24, 0x0b	; 11
 19e:	80 62       	ori	r24, 0x20	; 32
 1a0:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 1a2:	8b b1       	in	r24, 0x0b	; 11
 1a4:	80 64       	ori	r24, 0x40	; 64
 1a6:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_OFF;
 1a8:	8b b1       	in	r24, 0x0b	; 11
 1aa:	8f 77       	andi	r24, 0x7F	; 127
 1ac:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_OFF;
 1ae:	85 b1       	in	r24, 0x05	; 5
 1b0:	8e 7f       	andi	r24, 0xFE	; 254
 1b2:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 1b4:	85 b1       	in	r24, 0x05	; 5
 1b6:	82 60       	ori	r24, 0x02	; 2
 1b8:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 1ba:	85 b1       	in	r24, 0x05	; 5
 1bc:	84 60       	ori	r24, 0x04	; 4
 1be:	85 b9       	out	0x05, r24	; 5
		break;
 1c0:	08 95       	ret
		case 5:
			DISPLAY_SEG_A_ON;
 1c2:	8b b1       	in	r24, 0x0b	; 11
 1c4:	80 61       	ori	r24, 0x10	; 16
 1c6:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_OFF;
 1c8:	8b b1       	in	r24, 0x0b	; 11
 1ca:	8f 7d       	andi	r24, 0xDF	; 223
 1cc:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 1ce:	8b b1       	in	r24, 0x0b	; 11
 1d0:	80 64       	ori	r24, 0x40	; 64
 1d2:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_ON;
 1d4:	8b b1       	in	r24, 0x0b	; 11
 1d6:	80 68       	ori	r24, 0x80	; 128
 1d8:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_OFF;
 1da:	85 b1       	in	r24, 0x05	; 5
 1dc:	8e 7f       	andi	r24, 0xFE	; 254
 1de:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 1e0:	85 b1       	in	r24, 0x05	; 5
 1e2:	82 60       	ori	r24, 0x02	; 2
 1e4:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 1e6:	85 b1       	in	r24, 0x05	; 5
 1e8:	84 60       	ori	r24, 0x04	; 4
 1ea:	85 b9       	out	0x05, r24	; 5
		break;
 1ec:	08 95       	ret
		case 6:
			DISPLAY_SEG_A_ON;
 1ee:	8b b1       	in	r24, 0x0b	; 11
 1f0:	80 61       	ori	r24, 0x10	; 16
 1f2:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_OFF;
 1f4:	8b b1       	in	r24, 0x0b	; 11
 1f6:	8f 7d       	andi	r24, 0xDF	; 223
 1f8:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 1fa:	8b b1       	in	r24, 0x0b	; 11
 1fc:	80 64       	ori	r24, 0x40	; 64
 1fe:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_ON;
 200:	8b b1       	in	r24, 0x0b	; 11
 202:	80 68       	ori	r24, 0x80	; 128
 204:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_ON;
 206:	85 b1       	in	r24, 0x05	; 5
 208:	81 60       	ori	r24, 0x01	; 1
 20a:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 20c:	85 b1       	in	r24, 0x05	; 5
 20e:	82 60       	ori	r24, 0x02	; 2
 210:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 212:	85 b1       	in	r24, 0x05	; 5
 214:	84 60       	ori	r24, 0x04	; 4
 216:	85 b9       	out	0x05, r24	; 5
		break;
 218:	08 95       	ret
		case 7:
			DISPLAY_SEG_A_ON;
 21a:	8b b1       	in	r24, 0x0b	; 11
 21c:	80 61       	ori	r24, 0x10	; 16
 21e:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_ON;
 220:	8b b1       	in	r24, 0x0b	; 11
 222:	80 62       	ori	r24, 0x20	; 32
 224:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 226:	8b b1       	in	r24, 0x0b	; 11
 228:	80 64       	ori	r24, 0x40	; 64
 22a:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_OFF;
 22c:	8b b1       	in	r24, 0x0b	; 11
 22e:	8f 77       	andi	r24, 0x7F	; 127
 230:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_OFF;
 232:	85 b1       	in	r24, 0x05	; 5
 234:	8e 7f       	andi	r24, 0xFE	; 254
 236:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_OFF;
 238:	85 b1       	in	r24, 0x05	; 5
 23a:	8d 7f       	andi	r24, 0xFD	; 253
 23c:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_OFF;
 23e:	85 b1       	in	r24, 0x05	; 5
 240:	8b 7f       	andi	r24, 0xFB	; 251
 242:	85 b9       	out	0x05, r24	; 5
		break;
 244:	08 95       	ret
		case 8:
			DISPLAY_SEG_A_ON;
 246:	8b b1       	in	r24, 0x0b	; 11
 248:	80 61       	ori	r24, 0x10	; 16
 24a:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_ON;
 24c:	8b b1       	in	r24, 0x0b	; 11
 24e:	80 62       	ori	r24, 0x20	; 32
 250:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 252:	8b b1       	in	r24, 0x0b	; 11
 254:	80 64       	ori	r24, 0x40	; 64
 256:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_ON;
 258:	8b b1       	in	r24, 0x0b	; 11
 25a:	80 68       	ori	r24, 0x80	; 128
 25c:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_ON;
 25e:	85 b1       	in	r24, 0x05	; 5
 260:	81 60       	ori	r24, 0x01	; 1
 262:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 264:	85 b1       	in	r24, 0x05	; 5
 266:	82 60       	ori	r24, 0x02	; 2
 268:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 26a:	85 b1       	in	r24, 0x05	; 5
 26c:	84 60       	ori	r24, 0x04	; 4
 26e:	85 b9       	out	0x05, r24	; 5
		break;
 270:	08 95       	ret
		case 9:
			DISPLAY_SEG_A_ON;
 272:	8b b1       	in	r24, 0x0b	; 11
 274:	80 61       	ori	r24, 0x10	; 16
 276:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_ON;
 278:	8b b1       	in	r24, 0x0b	; 11
 27a:	80 62       	ori	r24, 0x20	; 32
 27c:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 27e:	8b b1       	in	r24, 0x0b	; 11
 280:	80 64       	ori	r24, 0x40	; 64
 282:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_OFF;
 284:	8b b1       	in	r24, 0x0b	; 11
 286:	8f 77       	andi	r24, 0x7F	; 127
 288:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_OFF;
 28a:	85 b1       	in	r24, 0x05	; 5
 28c:	8e 7f       	andi	r24, 0xFE	; 254
 28e:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 290:	85 b1       	in	r24, 0x05	; 5
 292:	82 60       	ori	r24, 0x02	; 2
 294:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 296:	85 b1       	in	r24, 0x05	; 5
 298:	84 60       	ori	r24, 0x04	; 4
 29a:	85 b9       	out	0x05, r24	; 5
		break;
 29c:	08 95       	ret
		case 10:
			DISPLAY_SEG_A_ON;
 29e:	8b b1       	in	r24, 0x0b	; 11
 2a0:	80 61       	ori	r24, 0x10	; 16
 2a2:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_ON;
 2a4:	8b b1       	in	r24, 0x0b	; 11
 2a6:	80 62       	ori	r24, 0x20	; 32
 2a8:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 2aa:	8b b1       	in	r24, 0x0b	; 11
 2ac:	80 64       	ori	r24, 0x40	; 64
 2ae:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_OFF;
 2b0:	8b b1       	in	r24, 0x0b	; 11
 2b2:	8f 77       	andi	r24, 0x7F	; 127
 2b4:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_ON;
 2b6:	85 b1       	in	r24, 0x05	; 5
 2b8:	81 60       	ori	r24, 0x01	; 1
 2ba:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 2bc:	85 b1       	in	r24, 0x05	; 5
 2be:	82 60       	ori	r24, 0x02	; 2
 2c0:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 2c2:	85 b1       	in	r24, 0x05	; 5
 2c4:	84 60       	ori	r24, 0x04	; 4
 2c6:	85 b9       	out	0x05, r24	; 5
		break;
 2c8:	08 95       	ret
		case 11:
			DISPLAY_SEG_A_OFF;
 2ca:	8b b1       	in	r24, 0x0b	; 11
 2cc:	8f 7e       	andi	r24, 0xEF	; 239
 2ce:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_OFF;
 2d0:	8b b1       	in	r24, 0x0b	; 11
 2d2:	8f 7d       	andi	r24, 0xDF	; 223
 2d4:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 2d6:	8b b1       	in	r24, 0x0b	; 11
 2d8:	80 64       	ori	r24, 0x40	; 64
 2da:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_ON;
 2dc:	8b b1       	in	r24, 0x0b	; 11
 2de:	80 68       	ori	r24, 0x80	; 128
 2e0:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_ON;
 2e2:	85 b1       	in	r24, 0x05	; 5
 2e4:	81 60       	ori	r24, 0x01	; 1
 2e6:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 2e8:	85 b1       	in	r24, 0x05	; 5
 2ea:	82 60       	ori	r24, 0x02	; 2
 2ec:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 2ee:	85 b1       	in	r24, 0x05	; 5
 2f0:	84 60       	ori	r24, 0x04	; 4
 2f2:	85 b9       	out	0x05, r24	; 5
		break;
 2f4:	08 95       	ret
		case 12:
			DISPLAY_SEG_A_ON;
 2f6:	8b b1       	in	r24, 0x0b	; 11
 2f8:	80 61       	ori	r24, 0x10	; 16
 2fa:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_OFF;
 2fc:	8b b1       	in	r24, 0x0b	; 11
 2fe:	8f 7d       	andi	r24, 0xDF	; 223
 300:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_OFF;
 302:	8b b1       	in	r24, 0x0b	; 11
 304:	8f 7b       	andi	r24, 0xBF	; 191
 306:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_ON;
 308:	8b b1       	in	r24, 0x0b	; 11
 30a:	80 68       	ori	r24, 0x80	; 128
 30c:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_ON;
 30e:	85 b1       	in	r24, 0x05	; 5
 310:	81 60       	ori	r24, 0x01	; 1
 312:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 314:	85 b1       	in	r24, 0x05	; 5
 316:	82 60       	ori	r24, 0x02	; 2
 318:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_OFF;
 31a:	85 b1       	in	r24, 0x05	; 5
 31c:	8b 7f       	andi	r24, 0xFB	; 251
 31e:	85 b9       	out	0x05, r24	; 5
		break;
 320:	08 95       	ret
		case 13:
			DISPLAY_SEG_A_OFF;
 322:	8b b1       	in	r24, 0x0b	; 11
 324:	8f 7e       	andi	r24, 0xEF	; 239
 326:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_ON;
 328:	8b b1       	in	r24, 0x0b	; 11
 32a:	80 62       	ori	r24, 0x20	; 32
 32c:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_ON;
 32e:	8b b1       	in	r24, 0x0b	; 11
 330:	80 64       	ori	r24, 0x40	; 64
 332:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_ON;
 334:	8b b1       	in	r24, 0x0b	; 11
 336:	80 68       	ori	r24, 0x80	; 128
 338:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_ON;
 33a:	85 b1       	in	r24, 0x05	; 5
 33c:	81 60       	ori	r24, 0x01	; 1
 33e:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_OFF;
 340:	85 b1       	in	r24, 0x05	; 5
 342:	8d 7f       	andi	r24, 0xFD	; 253
 344:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 346:	85 b1       	in	r24, 0x05	; 5
 348:	84 60       	ori	r24, 0x04	; 4
 34a:	85 b9       	out	0x05, r24	; 5
		break;
 34c:	08 95       	ret
		case 14:
			DISPLAY_SEG_A_ON;
 34e:	8b b1       	in	r24, 0x0b	; 11
 350:	80 61       	ori	r24, 0x10	; 16
 352:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_OFF;
 354:	8b b1       	in	r24, 0x0b	; 11
 356:	8f 7d       	andi	r24, 0xDF	; 223
 358:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_OFF;
 35a:	8b b1       	in	r24, 0x0b	; 11
 35c:	8f 7b       	andi	r24, 0xBF	; 191
 35e:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_ON;
 360:	8b b1       	in	r24, 0x0b	; 11
 362:	80 68       	ori	r24, 0x80	; 128
 364:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_ON;
 366:	85 b1       	in	r24, 0x05	; 5
 368:	81 60       	ori	r24, 0x01	; 1
 36a:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 36c:	85 b1       	in	r24, 0x05	; 5
 36e:	82 60       	ori	r24, 0x02	; 2
 370:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 372:	85 b1       	in	r24, 0x05	; 5
 374:	84 60       	ori	r24, 0x04	; 4
 376:	85 b9       	out	0x05, r24	; 5
		
		break;
 378:	08 95       	ret
		case 15:	
			DISPLAY_SEG_A_ON;
 37a:	8b b1       	in	r24, 0x0b	; 11
 37c:	80 61       	ori	r24, 0x10	; 16
 37e:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_B_OFF;
 380:	8b b1       	in	r24, 0x0b	; 11
 382:	8f 7d       	andi	r24, 0xDF	; 223
 384:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_C_OFF;
 386:	8b b1       	in	r24, 0x0b	; 11
 388:	8f 7b       	andi	r24, 0xBF	; 191
 38a:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_D_OFF;
 38c:	8b b1       	in	r24, 0x0b	; 11
 38e:	8f 77       	andi	r24, 0x7F	; 127
 390:	8b b9       	out	0x0b, r24	; 11
			DISPLAY_SEG_E_ON;
 392:	85 b1       	in	r24, 0x05	; 5
 394:	81 60       	ori	r24, 0x01	; 1
 396:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_F_ON;
 398:	85 b1       	in	r24, 0x05	; 5
 39a:	82 60       	ori	r24, 0x02	; 2
 39c:	85 b9       	out	0x05, r24	; 5
			DISPLAY_SEG_G_ON;
 39e:	85 b1       	in	r24, 0x05	; 5
 3a0:	84 60       	ori	r24, 0x04	; 4
 3a2:	85 b9       	out	0x05, r24	; 5
 3a4:	08 95       	ret

000003a6 <main>:
void display_show(uint8_t);


int main(void)	
{
	init_ports();
 3a6:	0e 94 50 00 	call	0xa0	; 0xa0 <init_ports>
	uint8_t i=0;
 3aa:	c0 e0       	ldi	r28, 0x00	; 0
    while (1) 
    {
		if(!(BTN0_READ)){
 3ac:	1c 99       	sbic	0x03, 4	; 3
 3ae:	fe cf       	rjmp	.-4      	; 0x3ac <main+0x6>
			display_show(i);
 3b0:	8c 2f       	mov	r24, r28
 3b2:	0e 94 69 00 	call	0xd2	; 0xd2 <display_show>
			if(i==15){
 3b6:	cf 30       	cpi	r28, 0x0F	; 15
 3b8:	11 f0       	breq	.+4      	; 0x3be <main+0x18>
				i=0;
				}else{
				i++;
 3ba:	cf 5f       	subi	r28, 0xFF	; 255
 3bc:	01 c0       	rjmp	.+2      	; 0x3c0 <main+0x1a>
    while (1) 
    {
		if(!(BTN0_READ)){
			display_show(i);
			if(i==15){
				i=0;
 3be:	c0 e0       	ldi	r28, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3c0:	2f ef       	ldi	r18, 0xFF	; 255
 3c2:	89 e6       	ldi	r24, 0x69	; 105
 3c4:	98 e1       	ldi	r25, 0x18	; 24
 3c6:	21 50       	subi	r18, 0x01	; 1
 3c8:	80 40       	sbci	r24, 0x00	; 0
 3ca:	90 40       	sbci	r25, 0x00	; 0
 3cc:	e1 f7       	brne	.-8      	; 0x3c6 <main+0x20>
 3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <main+0x2a>
 3d0:	00 00       	nop
 3d2:	ec cf       	rjmp	.-40     	; 0x3ac <main+0x6>

000003d4 <__tablejump2__>:
 3d4:	ee 0f       	add	r30, r30
 3d6:	ff 1f       	adc	r31, r31
 3d8:	05 90       	lpm	r0, Z+
 3da:	f4 91       	lpm	r31, Z
 3dc:	e0 2d       	mov	r30, r0
 3de:	09 94       	ijmp

000003e0 <_exit>:
 3e0:	f8 94       	cli

000003e2 <__stop_program>:
 3e2:	ff cf       	rjmp	.-2      	; 0x3e2 <__stop_program>
